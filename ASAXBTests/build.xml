<!-- 
	This is intended to be a simple build file, created a suggestion for the necessary steps need to utilize the FlexUnit4 Ant task.
	For the most detail when running this build, call "ant -v clean package".  The build uses a simple lifecycle of: 
	
	init->compile->test->package
	
	The end goal is to produce a zip of a website you could deploy for your application.  This build is not intended to be an example
	for how to use Ant or the Flex SDK Ant tasks.  This is just one possible way to utilize the FlexUnit4 Ant tasks. 
 -->
<project name="ASAXB Tests" basedir="." default="test">
	<property environment="env" />
	
	<property name="main.src.loc" location="${basedir}/src" />
	<property name="lib.loc" location="${basedir}/libs" />
	<property name="bin.loc" location="${basedir}/bin" />
	<property name="report.loc" location="${basedir}/report" />

	<property name="FLEX_HOME" location="${env.FLEX_HOME}" />
	<taskdef resource="flexTasks.tasks" classpath="${lib.loc}/flexTasks.jar" />
	<taskdef resource="flexUnitTasks.tasks" classpath="${lib.loc}/flexUnitTasks.jar" />

	<target name="clean">
		<delete includeemptydirs="true" failonerror="false">
			<fileset dir="${bin.loc}" defaultexcludes="false">
				<include name="**/*" />
			</fileset>
			<fileset dir="${report.loc}" defaultexcludes="false">
				<include name="**/*" />
			</fileset>
		</delete>
	</target>

	<target name="init">
		<mkdir dir="${bin.loc}" />
		<mkdir dir="${report.loc}" />
	</target>

	<target name="test">
			
		<mxmlc file="${main.src.loc}/ASAXBTests.mxml" output="${bin.loc}/ASAXBTests.swf">
			<source-path path-element="${main.src.loc}" />
			<library-path dir="${lib.loc}" append="true">
				<include name="*.swc" />
			</library-path>
			<compiler.verbose-stacktraces>true</compiler.verbose-stacktraces>
			<compiler.headless-server>true</compiler.headless-server>
		</mxmlc>

		<flexunit swf="${bin.loc}/ASAXBTests.swf" toDir="${report.loc}" haltonfailure="false" verbose="true" localTrusted="true" />

		<junitreport todir="${report.loc}">
			<fileset dir="${report.loc}">
				<include name="TEST-*.xml" />
			</fileset>
			<report format="frames" todir="${report.loc}/html" />
		</junitreport>

	</target>

</project>